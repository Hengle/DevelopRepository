■Util

※注意点
・I〇〇Handler関連のインターフェースを継承したクラスは、カメラにPhysics2DRaycasterの設定が必要
・外部スクリプトから呼ぶ際は using Util を忘れず
・不具合や改善点は適宜連絡してもらえるとヨシ


AreaTrigger2DHandler.cs
 → 「範囲内に一つもコライダがない」ことを確認するためのスクリプト
 → トリガーの範囲内にコライダーが存在したらtrue, 一つも無ければfalseを返す
 → RayAndMirrorsで使用。鏡の配置範囲内にオブジェクトがあったら配置できなくした

AutoSelfDestructor.cs
 → 一定秒数後に自身のゲームオブジェクトを破棄するスクリプト
 → 主に一過性のパーティクルに使用

DateTimeUtility.cs
 → DateTime型に関するユーティリティをまとめるクラス
 → 現在は 「DateTimeをint型の数値に変換」「DateTimeが特定の時間を超えているか確認」のみ
 → 主にログインボーナス周りの保存に使用

DragRotator.cs
 → オブジェクトをタップで回転させるためのクラス
 → 自身が持つコライダでタップ判定し、「親オブジェクトを」回転させる
 → ドラッグ操作によって回転
 → 親にもコライダがある場合は適宜ON/OFFすること
 
MultipleParticles.cs
 → 複数のパーティクルを一度に実行、停止するためのクラス
 → 空のゲームオブジェクトに貼り付け、子として複数のパーティクルを配置し使用
 → 停止メソッドは実行した瞬間にパーティクルが消滅する設定。適宜変更。

PressedButtonAnimator.cs
 → タップされたら画像が縮小される（ヘコむ）ボタン
 → ボタン自体が非有効（interactableがfalse等）なら機能しない
 → UGUI用

PressedSpriteAnimator.cs
 → タップされたら画像が縮小される（ヘコむ）スプライト
 → BoxColliderさえついていればSpriteでもUGUIのImageでも使用可
 → ただ縮小するだけなので、ボタンが無くてもOK

RandomUtility.cs
 → ランダム処理に関するユーティリティをまとめるクラス
 → 現状は重み付き抽選だけ
 → ガチャやルーレット等、確率操作が必要なものに使用
 → Dictionary<インデックス, 重みの値> で渡し、抽選されたインデックスが返却される
 
RepeatScalingButtonAnimator.cs
 → 自動でスケールが変わるボタン
 → ボタンの自動拡縮に使用
 → ボタンがタップされると通常サイズに一旦戻り、離したらアニメーション再開
 → 一度Stopを呼ぶと次回以降は動作しない

ScreenSpriteFitter.cs
 → SpriteRendererをカメラの幅いっぱいまで引き伸ばすスクリプト
 → ゲーム内等、UGUIでなくSpriteRendererでブロックしたい時などに使用
 → 特定の色を画面に重ねる目的も
 
TouchDownRotator.cs
 → オブジェクトをタップで回転させるためのクラス
 → 自身が持つコライダでタップ判定し、「親オブジェクトを」回転させる
 → タップ操作によって回転
 → 親にもコライダがある場合は適宜ON/OFFすること
 

■ExtensionMethods
メソッドごとにコメントがあるので見てもらえばOK


